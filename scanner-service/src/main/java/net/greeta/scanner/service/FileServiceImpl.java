package net.greeta.scanner.service;

import net.greeta.scanner.config.MinioConfiguration;
import net.greeta.scanner.data.EventDto;
import net.greeta.scanner.exception.VirusCheckExecutableFileException;
import net.greeta.scanner.model.FileEvent;
import net.greeta.scanner.model.FileEventResult;
import net.greeta.scanner.model.ResultStatus;
import net.greeta.scanner.repository.FileEventResultRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.io.File;
import java.util.Objects;

@Service
public class FileServiceImpl implements FileService {
  @Autowired MinioService minioService;
  @Autowired MinioConfiguration minioConfiguration;
  @Autowired
  FileEventResultRepository eventResultRepository;

  @Override
  @Transactional(rollbackFor = Exception.class)
  public void handleSuccess(EventDto eventDto, String path) {
    FileEvent event = eventDto.getEvent();
    FileEventResult result = new FileEventResult(event, path, ResultStatus.SUCCESS);
    eventResultRepository.saveAndFlush(result);
  }

  @Override
  @Transactional(rollbackFor = Exception.class)
  public void handleFailure(EventDto eventDto, String message) {
    FileEvent event = eventDto.getEvent();
    FileEventResult result = new FileEventResult(event, message, ResultStatus.FAIL);
    eventResultRepository.saveAndFlush(result);
  }

  @Override
  public void scan(File source) throws Exception {
    if (source.canExecute()) {
      throw new VirusCheckExecutableFileException("Warning! Executable file: " + source.getName());
    }
    //TODO: implement virus scanner
  }

  @Override
  public File download(String source, String outputName) throws Exception {
    if (source != null && source.startsWith("minio.bucket.store://")) {
      return minioService.downloadObject(
          minioConfiguration.getStoreBucket(),
          source.replaceFirst("minio.bucket.store://", ""),
          outputName);
    } else {
      throw new IllegalArgumentException("unknown source %s !" + source);
    }
  }

  @Override
  public void upload(File file, String prefix) throws Exception {
      minioService.uploadObject(
          file, minioConfiguration.getStreamBucket(), prefix + file.getName());
  }
}
